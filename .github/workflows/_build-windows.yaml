name: "Windows"

on:
  workflow_call:

jobs:
  windows:
    name: "Windows"
    runs-on: windows-latest

    steps:
      - name: Extract Tag
        id: get_tag_name
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Show TKinter version
        run: |
          python3 -c 'import tkinter; tcl = tkinter.Tcl(); print(tcl.call("info", "patchlevel"))'

      - name: Download ImageMagick
        run: |
          Invoke-WebRequest -Uri https://imagemagick.org/archive/binaries/ImageMagick-7.1.1-33-portable-Q16-HDRI-x64.zip -OutFile ImageMagick.zip

      - name: Extract ImageMagick
        run: Expand-Archive -Path ImageMagick.zip -DestinationPath $env:GITHUB_WORKSPACE\resources\ImageMagick

      - name: Add ImageMagick to PATH
        run: echo "$env:GITHUB_WORKSPACE\resources\ImageMagick" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append


      - name: Verify ImageMagick installation
        run: magick -version


      - name: Package application with PyInstaller
        run: poetry run pyinstaller spec_files/ui_app/NiimPrintX-windows.spec --noconfirm --clean

#      - name: Package CLI with PyInstaller
#        run: poetry run pyinstaller spec_files/cli_app/NiimPrintX-mac.spec --noconfirm --clean

#      - name: Create CLI compressed file
#        run: cd dist && tar -czf NiimPrintX-CLI-${{ steps.get_tag_name.outputs.VERSION }}-MacOSX-${{ steps.get_architecture.outputs.ARCH }}.tar.gz niimprintx

      - name: Create GUI compressed file
        run: |
          cd dist && tar -czf NiimPrintX-CLI-${{ steps.get_tag_name.outputs.VERSION }}-MacOSX-${{ steps.get_architecture.outputs.ARCH }}.tar.gz niimprintx
          |
          $outputFolder = "$env:GITHUB_WORKSPACE\dist\NiimPrintX"
          $zipPath = "$env:GITHUB_WORKSPACE\dist\NiimPrintX-Installer-${{ steps.get_tag_name.outputs.VERSION }}-Windows-X64.zip"
          Compress-Archive -Path "$outputFolder\*" -DestinationPath $zipPath

      - name: Upload GUI package
        uses: actions/upload-artifact@v4
        with:
          name: NiimPrintX-Installer-${{ steps.get_tag_name.outputs.VERSION }}-Windows-X64.zip
          path: dist/NiimPrintX-Installer-${{ steps.get_tag_name.outputs.VERSION }}-Windows-X64.zip
          retention-days: 1

#      - name: Upload CLI package
#        uses: actions/upload-artifact@v4
#        with:
#          name: NiimPrintX-CLI-${{ steps.get_tag_name.outputs.VERSION }}-MacOSX-${{ steps.get_architecture.outputs.ARCH }}.tar.gz
#          path: dist/NiimPrintX-CLI-${{ steps.get_tag_name.outputs.VERSION }}-MacOSX-${{ steps.get_architecture.outputs.ARCH }}.tar.gz
#          retention-days: 1


